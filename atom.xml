<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>refreshing18</title>
  
  <subtitle>及吾功成名就，携君陌上花开。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-20T15:57:37.785Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>volcano18</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>matlab的数据操作和线性规划</title>
    <link href="http://yoursite.com/2018/10/20/matlab%E7%9A%84%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/10/20/matlab的数据操作/</id>
    <published>2018-10-20T15:57:57.367Z</published>
    <updated>2018-10-20T15:57:37.785Z</updated>
    
    <content type="html"><![CDATA[<h2 id="matlab中变量命名："><a href="#matlab中变量命名：" class="headerlink" title="matlab中变量命名："></a>matlab中变量命名：</h2><ul><li><p>在matlab中，变量命名时需要使用字母开头，包括字母，数字，下划线，区分大小写。</p></li><li><p>不声明，不定义，拿来就可以直接使用</p></li></ul><p>语句：</p><ul><li><p>回车则表示一句结束，末尾无分号，则输出该句执行后的结果，末尾无回车，则只执行，不输出。</p></li><li><p>注释一%开头表示</p></li><li><p>一行写不开，用…续航，否则默认这一句已经完毕</p></li></ul><p>赋值：</p><ul><li><p>变量=表达式，表示将表达式的值赋值给变量</p></li><li><p>表达式，表示将表达式的值赋值给默认变量ans</p></li></ul><p>工作空间中驻留变量的查看：</p><ul><li>who和whos</li></ul><p>清除变量：</p><ul><li>clear，默认全部清除，clear + 变量名，可以清除指定的变量。</li></ul><p>保存数据：</p><ul><li><p>save,默认全部保存。</p></li><li><p>save matlab.mat d -append，将变量d添加到matlab.mat文件中。</p></li></ul><p>数据输出格式控制：</p><ul><li><p>format只影响数据的输出格式，不影响计算和存储。</p></li><li><p>默认输出格式为short格式。</p></li></ul><p>matlab的数据类型：</p><p>数值型：双精度（8位)，单精度，带符号和无符号。</p><p>最常用的数据类型，建立方法如下：</p><p>a=1;建立double型数据a，值为1。</p><p>b=uint8(a);a转化为unit8类型（无符号整形，8位）赋值到b中，执行结果a的类型不变。</p><p>a=uint8(a);a转化为unit8类型。</p><p>a=double(a);a转化为双精度类型。</p><p>class(a)查看a的数据类型。</p><p>字符串：建立，使用单撇号括起来的字符序列。单个字符和字符序列都使用单撇号括起来。</p><p>获取字符的ascii码，使用double函数或者abs函数。</p><p>double(‘a’)输出a字符的ascii码。</p><p>char(99)输出99代表的字符‘c’。</p><p>字符串与数值的互换：str2num和num2str。</p><p>eval函数执行字符串的内容。</p><p>结构体：</p><p>单元：</p><p>多维矩阵：</p><p>稀疏矩阵：</p><h2 id="线性规划算法："><a href="#线性规划算法：" class="headerlink" title="线性规划算法："></a>线性规划算法：</h2><p>初识数模就学习了线性规划，其实本人认为线性规划类的算法在属性建模中有着不可取代的作用，因为学习数学建模的目的也就是为了建立出合理的模型，使问题简化，从而得到最优解，然而数学建模竞赛大多数问题属于最优化问题，很多时候这些问题可以用数学规划算法来进行描述，而线性规划正式其中的一种。其实关于线性规划，简单的说，可能大家高中就学过了，不就是一个等式在几个不等式的约束下求解最大值和最小值吗？是的，线性规划也就是这样。但是，问题的关键是我们需要将等式和不等式合理的列出，并能够求解出符合条件的解，此过程也被称为建模。</p><p>举个简单的例子：</p><p>例 1 某机床厂生产甲、乙两种机床，每台销售后的利润分别为 4000 元与 3000 元。<br>生产甲机床需用 A、B 机器加工，加工时间分别为每台 2 小时和 1 小时；生产乙机床<br>需用 A、B、C 三种机器加工，加工时间为每台各一小时。若每天可用于加工的机器时<br>数分别为 A 机器 10 小时、B 机器 8 小时和C 机器 7 小时，问该厂应生产甲、乙机床各<br>几台，才能使总利润最大？</p><p>以高中的知识很容易可以列出等式和不等式，但是在列出等式和不等式之前我们需要先合理的设置变量，比如这里需要设置设该厂生产 x~1~ 台甲机床和 x~2~ 乙机床时总利润最大，则 x ~1~, x~2~<br>应满足</p><p><img src="https://i.loli.net/2018/10/20/5bcb4e69e4b8f.png" alt="360截图18221227141914"></p><p>总的来说，线性规划问题是在一组线性约束条件的限制下，求一线性目标函数最大或最小的问题。在解决实际问题时，把问题归结成一个线性规划数学模型是很重要的一步，但往往也是困难的一步，模型建立得是否恰当，直接影响到求解。而选适当的决策变量，是我们建立有效模型的关键之一。上述的x1和x2即为决策变量。</p><p>在不上传我就要被罚钱了。后续的等会再补充，先上传要紧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;matlab中变量命名：&quot;&gt;&lt;a href=&quot;#matlab中变量命名：&quot; class=&quot;headerlink&quot; title=&quot;matlab中变量命名：&quot;&gt;&lt;/a&gt;matlab中变量命名：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在matlab中，变量命名时需要使用字母开
      
    
    </summary>
    
      <category term="数学建模" scheme="http://yoursite.com/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
      <category term="matlab使用" scheme="http://yoursite.com/tags/matlab%E4%BD%BF%E7%94%A8/"/>
    
      <category term="线性规划算法" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>web信息泄露工具</title>
    <link href="http://yoursite.com/2018/10/20/web%E4%BA%94%E5%A4%A7%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2018/10/20/web五大信息泄露收集工具/</id>
    <published>2018-10-20T13:20:19.691Z</published>
    <updated>2018-10-20T13:21:11.436Z</updated>
    
    <content type="html"><![CDATA[<p>1，bbscan一款轻量级的web信息泄露批量扫描工具。扫描迅速，使用简单。</p><p>特性：</p><ul><li>小字典</li><li>可以自动扫描 Target/Mask 这样网络中所有的主机</li><li>误报率小</li></ul><p>首先下载吧，下载地址如下：<a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a></p><p>使用方法：下载以后先解压，解压以后可以就直接在解压目录下使用命令（python需要已经安装，并且需要使用python2)：</p><p>pip install -r requirements.txt</p><p>安装完成以后就可以直接扫描web应用程序了。</p><p>使用方法如下：对ip和端口为10.242.227.11:88的主机进行扫描</p><p>python BBScan.py –host <a href="http://10.242.227.11:88" target="_blank" rel="noopener">http://10.242.227.11:88</a></p><p><img src="https://i.loli.net/2018/10/20/5bcb23e14f11e.png" alt="3"></p><p>扫描结果如下：</p><p><img src="https://i.loli.net/2018/10/20/5bcb241a24f7a.png" alt="volcano18"></p><p>具体的使用方法也可以参考链接：</p><p><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a></p><p><a href="https://www.secpulse.com/archives/40553.html" target="_blank" rel="noopener">https://www.secpulse.com/archives/40553.html</a></p><p><a href="http://www.legendsec.org/1067.html" target="_blank" rel="noopener">http://www.legendsec.org/1067.html</a></p><p>[注]：分享一波本人在这里遇到的坑吧，因为我当前使用的是python3，然后bbscan需要使用python2进行运行，于是我便将python27也添加到了环境变量，为了让系统能够区分python2和python3我将python安装目录下的python.exe该成了python2.exe，所以以后在我控制台直接输入python运行的是python的3的版本，而需要使用python的2.7的版本时，需要输入python2，好了，python2的环境变量既然配置好了，那么接下来我就要安装bbscan所需要的一些库文件了，于是我输入命令</p><p>pip2 install -r requirements.txt（因为我安装的python2.7，在python2.7的scripts目录下面也有pip2.exe，所以我需要使用pip2 install -r requirements.txt,因为如果我输入pip install -r requirements.txt则默认调用的是python3中的pip。）</p><p>但是报错了，报错如下：</p><p>Fatal error in launcher: Unable to create process using ‘“‘</p><p>解决方法：运行命令python2 -m pip install –upgrade pip升级pip的版本，因为重装以后会根据更改后的python的执行文件来创建关联，问题这样就被解决了，如果还不行，那就重装pip吧，使用命令如下：</p><p>python2  -m pip install –upgrade –force-reinstall pip</p><p>第一步bbscan所需要的库安装完成之后就可以直接使用了。</p><p>再次注明：pip2.7 install -r requirements.txt需要在bbscan的安装目录下运行。</p><p><img src="https://i.loli.net/2018/10/20/5bcb28a115f3e.png" alt="3"></p><p>2，git信息泄露工具：githack</p><p>下载地址：<a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a>    </p><p>3，dirbrute</p><p>下载地址：<a href="https://github.com/Xyntax/DirBrute" target="_blank" rel="noopener">https://github.com/Xyntax/DirBrute</a></p><p>4，御剑</p><p>御剑是一款强大的后台扫描工具</p><p>5，Seay-svn源代码备份漏洞利用工具</p><p>以上五款都是经常使用的web信息泄露的收集工具。有时间我会补全每一款的使用方法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1，bbscan一款轻量级的web信息泄露批量扫描工具。扫描迅速，使用简单。&lt;/p&gt;
&lt;p&gt;特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小字典&lt;/li&gt;
&lt;li&gt;可以自动扫描 Target/Mask 这样网络中所有的主机&lt;/li&gt;
&lt;li&gt;误报率小&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先下
      
    
    </summary>
    
      <category term="信息泄露工具" scheme="http://yoursite.com/categories/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="web安全" scheme="http://yoursite.com/tags/web%E5%AE%89%E5%85%A8/"/>
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>密码记录keepass</title>
    <link href="http://yoursite.com/2018/10/19/%E5%AF%86%E7%A0%81%E8%AE%B0%E5%BD%95keepass/"/>
    <id>http://yoursite.com/2018/10/19/密码记录keepass/</id>
    <published>2018-10-19T12:40:55.953Z</published>
    <updated>2018-10-19T12:41:40.940Z</updated>
    
    <content type="html"><![CDATA[<p>作为一个信息安全专业的学生，可能需要经常逛逛各大网站，或者一些什么论坛，社区什么的。但是经常需要会被要求注册，那么密码改如何设置呢？全部使用一样的密码吗？不存在的。那么密码肯定会存在被忘记的可能吧。不用担心，keepass能帮你解决此问题，帮助你保管好你的密码，并且数据库直接存放在你自己的电脑。应该是很安全的。</p><p>keepass下载地址： <a href="https://keepass.info/download.html" target="_blank" rel="noopener">https://keepass.info/download.html</a></p><p>直接点击安装即可。</p><p>至于使用方法吧，自己尝试尝试吧。很简单。</p><p>file-&gt;new-&gt;ok选择自己所要存放的目录。然后设置自己数据库的密码。再设置自己数据库名。</p><p>然后再database下点击network或者其他的，再在空白框内右键add entry就可以创建密码了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;作为一个信息安全专业的学生，可能需要经常逛逛各大网站，或者一些什么论坛，社区什么的。但是经常需要会被要求注册，那么密码改如何设置呢？全部使用一样的密码吗？不存在的。那么密码肯定会存在被忘记的可能吧。不用担心，keepass能帮你解决此问题，帮助你保管好你的密码，并且数据库直
      
    
    </summary>
    
      <category term="软件安装" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
    
      <category term="keepass" scheme="http://yoursite.com/tags/keepass/"/>
    
  </entry>
  
  <entry>
    <title>思科模拟器下载（Cisco Packet Tracer）</title>
    <link href="http://yoursite.com/2018/10/19/Cisco-Packet-Tracer/"/>
    <id>http://yoursite.com/2018/10/19/Cisco-Packet-Tracer/</id>
    <published>2018-10-19T12:00:12.005Z</published>
    <updated>2018-10-19T12:00:12.005Z</updated>
    
    <content type="html"><![CDATA[<p>经常有同学问我软件如何安装，下载之类的问题，借助今天的思科模拟器稍微总结一下，一般不就是直接百度或者谷歌搜索词条“所要下载的软件名安装方法”或者“所要下载的软件名下载”就可以看到你所需要的结果吗？所以啊，学会百度和谷歌哟。还要学会github啊，github上边也可能有你所要找的东西的，思科模拟器我在百度和谷歌找了一圈，没有看到我想要的，我就到github上面去找去了，搜索的第一条就是，附上下载地址，<a href="https://www.netacad.com/group/offerings/packet-tracer/" target="_blank" rel="noopener">https://www.netacad.com/group/offerings/packet-tracer/</a></p><p>至于安装方法吧，都是直接下一步。安装完成就可以直接使用了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;经常有同学问我软件如何安装，下载之类的问题，借助今天的思科模拟器稍微总结一下，一般不就是直接百度或者谷歌搜索词条“所要下载的软件名安装方法”或者“所要下载的软件名下载”就可以看到你所需要的结果吗？所以啊，学会百度和谷歌哟。还要学会github啊，github上边也可能有你所
      
    
    </summary>
    
      <category term="软件安装" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
    
      <category term="思科模拟器" scheme="http://yoursite.com/tags/%E6%80%9D%E7%A7%91%E6%A8%A1%E6%8B%9F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>bwapp玩法总结之一</title>
    <link href="http://yoursite.com/2018/10/17/bwapp%E7%8E%A9%E6%B3%95%E6%80%BB%E7%BB%93%E4%B9%8B%E4%B8%80/"/>
    <id>http://yoursite.com/2018/10/17/bwapp玩法总结之一/</id>
    <published>2018-10-17T09:47:29.767Z</published>
    <updated>2018-10-17T11:00:53.010Z</updated>
    
    <content type="html"><![CDATA[<h1 id="bwapp玩法总结之一"><a href="#bwapp玩法总结之一" class="headerlink" title="bwapp玩法总结之一"></a>bwapp玩法总结之一</h1><h2 id="html注入"><a href="#html注入" class="headerlink" title="html注入"></a>html注入</h2><h3 id="html-injection-Reflected-GET-类型"><a href="#html-injection-Reflected-GET-类型" class="headerlink" title="html injection-Reflected(GET)类型"></a>html injection-Reflected(GET)类型</h3><p>1，low级别，随便输入，观察到输入什么即会输出什么。（即没有进行任何过滤）</p><p><img src="https://i.loli.net/2018/10/07/5bb9c2b463e3d.png" alt="图片1"></p><p>输入<code>&lt;script&gt;alert(11)&lt;/script&gt;</code>可以成功弹框，说明存在html注入。（注明：html注入包含xss注入）</p><p><img src="https://i.loli.net/2018/10/07/5bb9c4700786b.png" alt=""></p><p>可以以读取跟目录下的图片：</p><p>在输入框中输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;../index.png&quot;/&gt;</span><br></pre></td></tr></table></figure><p>即可。</p><p><img src="https://i.loli.net/2018/10/07/5bb9d29ae1975.png" alt="volcano18"></p><p>2，medium级别,直接输入<code>&lt;script&gt;alert(11)&lt;/script&gt;</code>发现无法成功弹框，对<code>&lt;script&gt;alert(11)&lt;/script&gt;</code>进行url编码，编码后的结果为<code>%3C%73%63%72%69%70%74%3E%61%6C%65%72%74%28%31%31%29%3C%2F%73%63%72%69%70%74%3E</code>，使用该脚本进行注入，发现注入成功，即可以成功弹框。编码推荐网址为（<a href="http://www.toolsxx.com/code/xss.html）" target="_blank" rel="noopener">http://www.toolsxx.com/code/xss.html）</a></p><p><img src="https://i.loli.net/2018/10/07/5bb9c4700786b.png" alt="图片2"></p><p>3，high级别，发现无论如何都无法成功进行弹框，即也无法进行html注入，那原因是什么呢？</p><p>让我们一起来看看源码吧。</p><p>在不同等级下分别对应不同的函数：low-no_check,  medium-xss_check_1, high-xss_check_3。</p><p><img src="https://i.loli.net/2018/10/07/5bb9d4640f6de.png" alt="volcano18"></p><p>4，在low级别下源码为：</p><p><img src="https://i.loli.net/2018/10/07/5bb9c7f0d5cef.png" alt="图片3"></p><p>没有进行任何过滤，输入什么，立刻输出什么。</p><p>5，在medium级别下源码为：</p><p>​            <img src="https://i.loli.net/2018/10/07/5bb9c8cfbe1f4.png" alt="图片4"></p><p>在medium级别，由源码可知，该级别下将用户输入的“&gt;”和”&lt;”替换为了他们所对应的html实体&amp;gt和&amp;lt，但是最后又进行了一次url解码，所以绕过方法为：先对&gt;和&lt;进行url编码，即可绕过。编码结果为：<code>%3Cscript%3Ealert(11)%3C/script%3E</code></p><p>6，在high级别下源码为：</p><p><img src="https://i.loli.net/2018/10/07/5bb9cb63ab656.png" alt="图片5"></p><p>由源码可知，在high级别下使用了php中防止注入的终极函数htmlentitiles(),在此处没有注入成功，虽然尝试了很久，但是依旧没有成功。</p><h3 id="html-injection-Reflected-post-类型"><a href="#html-injection-Reflected-post-类型" class="headerlink" title="html injection-Reflected(post)类型"></a>html injection-Reflected(post)类型</h3><p>该类型下所调用的函数与html injection-Reflected(get)类型完全一样。只是将表单的提交方式由get变为了post。</p><p>在不同等级下分别对应不同的函数：low-no_check,  medium-xss_check_1, high-xss_check_3。</p><p><img src="https://i.loli.net/2018/10/07/5bb9d4640f6de.png" alt="volcano18"></p><h3 id="html-injection-Reflected-url-类型"><a href="#html-injection-Reflected-url-类型" class="headerlink" title="html injection-Reflected(url)类型"></a>html injection-Reflected(url)类型</h3><p>1，在low级别下：url: <a href="http://192.168.80.141/bWAPP/htmli_current_url.php" target="_blank" rel="noopener">http://192.168.80.141/bWAPP/htmli_current_url.php</a>? 后面加上什么就返回什么，</p><p><img src="https://i.loli.net/2018/10/07/5bb9fdb56438f.png" alt="volcano18"></p><p>尝试输入<code>&lt;script&gt;alert(11)&lt;/script&gt;</code>进行弹框，发现弹框失败，从而输入的脚本进行了url编码，个人立即猜测是因为在浏览器的输入框中输入的原因，所以立即使用burpsuite进行抓包，然后再在url后面加上?<code>&lt;script&gt;alert(11)&lt;/script&gt;</code></p><p><img src="https://i.loli.net/2018/10/07/5bb9fef87685d.png" alt="1538916062909"></p><p>再点击Forward发送该报文，弹窗成功，即脚本执行成功。</p><p><img src="https://i.loli.net/2018/10/07/5bb9ff85ae26f.png" alt="1538916200429"></p><p>2，在medium级别下，由于火狐浏览器对url进行了编码，所以无法继续使用low级别下的方法进行弹框，但是脚本依旧可以成功执行，在ie浏览器中的url后面加上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="tag">&lt;<span class="name">h1</span>&gt;</span>volcano18<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><p>，发现该脚本成功执行，执行结果如图：</p><p><img src="https://i.loli.net/2018/10/07/5bba05ba80b80.png" alt="volcano18"></p><p>其实也是可以弹框的，只是ie浏览器和谷歌浏览器禁用了部分js脚本，所以导致弹框失败，在url后面加上?<code>&lt;script&gt;alert(11)&lt;/script&gt;</code>执行结果如下：脚本可以成功执行，只是被ie浏览器阻止其运行。</p><p><img src="https://i.loli.net/2018/10/07/5bba0697b6127.png" alt="volcano18"></p><p>3,在high别下，由于又使用了防止输入的终极函数htmlentitiles()，无法进行注入。</p><p>查看html injection-Reflected(url)后端处理部分源码如下：low-0,    medium-1,   high-2,  </p><p><img src="https://i.loli.net/2018/10/07/5bba078482ba1.png" alt="volcano18"></p><p>在low和medium级别下，没有进行任何过滤，都是直接获取url然后将其直接输出，而high级别下使用了xss_check_3函数对host后面的部分进行了过滤处理，使得无法进行注入。</p><p><img src="https://i.loli.net/2018/10/07/5bba097db5cb3.png" alt="1538918762260"></p><h3 id="html-injection-stored-blog-类型"><a href="#html-injection-stored-blog-类型" class="headerlink" title="html injection-stored(blog)类型"></a>html injection-stored(blog)类型</h3><p>该类型为存储型的html注入，即所提交的脚本会重复执行。</p><p>1，在low级别下，没有进行任何过滤，直接输入脚本<code>&lt;script&gt;alert(&#39;volcano18&#39;)&lt;/script&gt;</code>即可成功弹框，</p><p><img src="https://i.loli.net/2018/10/07/5bba0df693a40.png" alt="volcano18"></p><p>也可以使用脚本<code>&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code>读取用户的cookie</p><p><img src="https://i.loli.net/2018/10/07/5bba0ed348571.png" alt="360截图17940614453528"></p><p>也可以读取我事先放到根目录下的图片：使用脚本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"../index.png"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/10/08/5bbaf42d7c907.png" alt="volcano18"></p><p>等一些后期利用方面可以自己随便选取一个模块自己练手，本人在这里只针对这些模块的一些绕过方式和利用方式进行讲解。</p><p>2，在medium级别下，试了很久没有成功执行脚本，最后无奈，只好查看源码了，查看源码发现，不论是medium级别还是high级别，都使用了xss_check_3函数进行了过滤，源码如下：</p><p><img src="https://i.loli.net/2018/10/08/5bbb04b838fa9.png" alt="volcano18"></p><p>对留言框的输入使用了xss_check_3函数进行过滤，xss_check_3函数源码如下：</p><p><img src="https://i.loli.net/2018/10/08/5bbb059405d5b.png" alt="volcano18"></p><p>然而在xss_check_3中使用了防止html注入的终极函数htmlspecialchars()，所以在html injection-stored(blog)类型中，不论是medium级别还是high级别均无法进行注入。</p><h3 id="iFrame-Injection类型"><a href="#iFrame-Injection类型" class="headerlink" title="iFrame Injection类型"></a>iFrame Injection类型</h3><p>1,在low级别下，首先从url：<a href="http://192.168.174.128/bWAPP/iframei.php?ParamUrl=robots.txt&amp;ParamWidth=250&amp;ParamHeight=250" target="_blank" rel="noopener">http://192.168.174.128/bWAPP/iframei.php?ParamUrl=robots.txt&amp;ParamWidth=250&amp;ParamHeight=250</a> 观察到robots.txt文件，刚刚好被读取到界面上显示，于是查看源码发现，ParamUrl后面所包含的路径直接内嵌在iframe标签中：如图：</p><p><img src="https://i.loli.net/2018/10/08/5bbb3e25b0b13.png" alt="volcano18"></p><p>于是我进行了如下利用，读取根目录下的index.png图片，将url改为：<a href="http://192.168.174.128/bWAPP/iframei.php?ParamUrl=192.168.174.128/../../index.png&amp;ParamWidth=250&amp;ParamHeight=250即可以成功读取根目录下的图片：" target="_blank" rel="noopener">http://192.168.174.128/bWAPP/iframei.php?ParamUrl=192.168.174.128/../../index.png&amp;ParamWidth=250&amp;ParamHeight=250即可以成功读取根目录下的图片：</a></p><p><img src="https://i.loli.net/2018/10/08/5bbb3ee06a013.png" alt="volcano18"></p><p>可以也将url改为：<a href="http://192.168.174.128/bWAPP/iframei.php?ParamUrl=https://www.baidu.com&amp;ParamWidth=250&amp;ParamHeight=250" target="_blank" rel="noopener">http://192.168.174.128/bWAPP/iframei.php?ParamUrl=https://www.baidu.com&amp;ParamWidth=250&amp;ParamHeight=250</a> 从而将百度网页内嵌在iframe框架中，</p><p><img src="https://i.loli.net/2018/10/08/5bbb3f66dbbb3.png" alt="volcano18"></p><p>也可以直接构造playload进行弹框：<a href="http://192.168.174.128/bWAPP/iframei.php?ParamUrl=javascript:alert(11);&amp;ParamWidth=250&amp;ParamHeight=250，即将ParamUrl的值设置为javascript:alert(11)" target="_blank" rel="noopener">http://192.168.174.128/bWAPP/iframei.php?ParamUrl=javascript:alert(11);&amp;ParamWidth=250&amp;ParamHeight=250，即将ParamUrl的值设置为javascript:alert(11)</a>;</p><p><img src="https://i.loli.net/2018/10/08/5bbb40f45e7aa.png" alt="volcano18"></p><p>也可以这样构造playload将url设置为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.174.128/bWAPP/iframei.php?ParamUrl=&quot; onload=alert(11)&gt;&lt;/iframe&gt;//&amp;ParamWidth=250&amp;ParamHeight=250</span><br></pre></td></tr></table></figure><p>   即将iframe标签提前闭合。</p><p><img src="https://i.loli.net/2018/10/08/5bbb41d5ba246.png" alt="volcano18"></p><p>2,在medium级别下，在参数ParamUrl试过了各种脚本，也玩了很久很久，发现无论如何，src总是等于robots.txt于是估计可能是ParamUrl参数无法改变，那么真的不能注入了吗？这时我便想起了该url中的另外两个参数，没想到真的在另外两个参数注入成功了，将ParamWidth参数值设置为” onload=alert(11)&gt;//即可成功注入。</p><p><img src="https://i.loli.net/2018/10/08/5bbb45124776d.png" alt="volcano18"></p><p>3,在high级别下，有没有成功进行注入，估计又是使用了防止html注入的终极函数htmlspecialchars(),于是查看源码：</p><p><img src="https://i.loli.net/2018/10/08/5bbb48ca191fb.png" alt="volcano18"></p><p>发现在medium级别时，使用的是xss_check_4()函数进行过滤，查看xss_check_4函数如下：</p><p><img src="https://i.loli.net/2018/10/08/5bbb4a841feb1.png" alt="volcano18"></p><p>使用了addslashes()函数进行过滤，该函数会在预定义字符之前添加反斜杠，会添加反斜杠预定义字符有：单引号（‘），双引号（“），反斜杠（\ )，NULL。使用该函数进行过滤采用上述方法完全可以进行绕过。</p><p>在high级别下，使用的是xss_check_3()函数进行过滤</p><p><img src="https://i.loli.net/2018/10/08/5bbb059405d5b.png" alt="volcano18"></p><p>该函数中采用了防止xss注入的终极函数htmlspecialchars()，所以无法进行注入。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;bwapp玩法总结之一&quot;&gt;&lt;a href=&quot;#bwapp玩法总结之一&quot; class=&quot;headerlink&quot; title=&quot;bwapp玩法总结之一&quot;&gt;&lt;/a&gt;bwapp玩法总结之一&lt;/h1&gt;&lt;h2 id=&quot;html注入&quot;&gt;&lt;a href=&quot;#html注入&quot; cla
      
    
    </summary>
    
      <category term="靶机" scheme="http://yoursite.com/categories/%E9%9D%B6%E6%9C%BA/"/>
    
    
      <category term="bwapp玩法" scheme="http://yoursite.com/tags/bwapp%E7%8E%A9%E6%B3%95/"/>
    
      <category term="bwapp靶机" scheme="http://yoursite.com/tags/bwapp%E9%9D%B6%E6%9C%BA/"/>
    
      <category term="web安全" scheme="http://yoursite.com/tags/web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>bwapp不一样的玩法</title>
    <link href="http://yoursite.com/2018/10/14/bwapp%E4%B8%8D%E4%B8%80%E6%A0%B7%E7%9A%84%E7%8E%A9%E6%B3%95/"/>
    <id>http://yoursite.com/2018/10/14/bwapp不一样的玩法/</id>
    <published>2018-10-14T03:48:09.381Z</published>
    <updated>2018-10-14T03:50:12.600Z</updated>
    
    <content type="html"><![CDATA[<h1 id="bwapp不一样的玩法"><a href="#bwapp不一样的玩法" class="headerlink" title="bwapp不一样的玩法"></a>bwapp不一样的玩法</h1><p>首先需要下载bwapp虚拟机镜像，下载完成后可以直接使用虚拟机打开。</p><p>下载地址：<a href="https://sourceforge.net/projects/bwapp/files/bee-box/" target="_blank" rel="noopener">https://sourceforge.net/projects/bwapp/files/bee-box/</a> 下载的是1.2G的，bee-box_v1.6.7z，而不是下载15.1MB的。</p><p>打开虚拟机后，首先双击bWAPP-Install后，安装提示进行安装。然后双击bWAPP-Start进行运行bwapp,打开终端，输入ifconfig命令查看靶机ip。</p><p><img src="https://i.loli.net/2018/10/09/5bbc6581c0c55.png" alt="refreshing18"></p><p>然后再kali虚拟机中使用nmap对该ip进行端口扫描，扫描结果如下：</p><p>nmap -p1-65535 -sS -sV -T4 192.168.174.130</p><p><img src="https://i.loli.net/2018/10/09/5bbc664f0c11b.png" alt="refreshing18"></p><p>发现ftp端口开放，检查是否可以匿名登录：</p><p>nmap -p21 192.168.174.130 –script /usr/share/nmap/scripts/ftp-anon.nse</p><p><img src="https://i.loli.net/2018/10/09/5bbc680cea70c.png" alt="3"></p><p>检查结果指示允许匿名登录，于是便登录进去。</p><p>ftp 192.168.174.130          用户名为anonymous，密码为空。登录成功。</p><p><img src="https://i.loli.net/2018/10/09/5bbc68e4deb1a.png" alt="refreshing18"></p><p>于是再想，能不能上传木马，拿shell。</p><p>便在kali中使用weevely生成shell1.php木马，并且将其上传到bwapp服务器上。</p><p>weevely生成木马的命令：其中password为密码可以更改，shell1.php问所生成木马的名称，默认生成的木马在目录/usr/share/weevely/下</p><p>weevely generate password shell1.php</p><p>再将木马复制到root目录下：cp shell1.php /root/shell1.php</p><p>然后再使用ftp服务将该木马上传：</p><p>首先需要采用上述方法，连接上bwapp靶机的ftp服务，然后使用命令put shell1.php进行上传。</p><p><img src="https://i.loli.net/2018/10/09/5bbc6bb88cdff.png" alt="refreshing18"></p><p>文件上传成功，使用命令ls，进一步确认是否上传成功。</p><p><img src="https://i.loli.net/2018/10/09/5bbc6c3508074.png" alt="refreshing18"></p><p>观察到shell1.php文件，确认上传成功。</p><p>但是问题来了，文件上传成功后，上传到了bwapp服务器上的哪里呢？</p><p>dirbuster此时就派上用场了，直接在kali中输入命令dirbuster即可启动该扫描器，个人建议使用dirbuster自带字典，自带字典目录如下：./.ZAP/fuzzers/dirbuster     也可以使用命令find -name dirbuster进行查找，最后启动dirbuster对目录进行扫描。</p><p>dirbuster的使用方法可以参考：<a href="https://www.cnblogs.com/anka9080/p/mlsm.html" target="_blank" rel="noopener">https://www.cnblogs.com/anka9080/p/mlsm.html</a></p><p>扫描结果发现了我们上传的shell1.php文件在目录/webdav/shell1.php下。</p><p><img src="https://i.loli.net/2018/10/09/5bbc6e859c38c.png" alt="refreshing18"></p><p>既然发现了目录，那就使用weevely直接拿下shell吧。</p><p>使用命令：weevely <a href="http://192.168.174.130/webdav/shell1.php" target="_blank" rel="noopener">http://192.168.174.130/webdav/shell1.php</a> password</p><p>成功拿下shell，如图：</p><p><img src="https://i.loli.net/2018/10/09/5bbc6f09c88b0.png" alt="refreshing18"></p><p><img src="https://i.loli.net/2018/10/09/5bbc6f5e5b3ac.png" alt="refreshing18"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;bwapp不一样的玩法&quot;&gt;&lt;a href=&quot;#bwapp不一样的玩法&quot; class=&quot;headerlink&quot; title=&quot;bwapp不一样的玩法&quot;&gt;&lt;/a&gt;bwapp不一样的玩法&lt;/h1&gt;&lt;p&gt;首先需要下载bwapp虚拟机镜像，下载完成后可以直接使用虚拟机打开。
      
    
    </summary>
    
      <category term="靶机" scheme="http://yoursite.com/categories/%E9%9D%B6%E6%9C%BA/"/>
    
    
      <category term="bwapp玩法" scheme="http://yoursite.com/tags/bwapp%E7%8E%A9%E6%B3%95/"/>
    
      <category term="bwapp靶机" scheme="http://yoursite.com/tags/bwapp%E9%9D%B6%E6%9C%BA/"/>
    
      <category term="web安全" scheme="http://yoursite.com/tags/web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>readme</title>
    <link href="http://yoursite.com/2018/10/13/hello-world/"/>
    <id>http://yoursite.com/2018/10/13/hello-world/</id>
    <published>2018-10-12T16:01:25.586Z</published>
    <updated>2018-10-20T12:37:31.141Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="readme" scheme="http://yoursite.com/categories/readme/"/>
    
    
      <category term="readme" scheme="http://yoursite.com/tags/readme/"/>
    
  </entry>
  
</feed>
